{"version":3,"sources":["Components/ToolBar.js","Components/NewTaskHandler.js","Components/CategoryRadio.js","Components/TaskElement.js","Components/MainContainer.js","index.js"],"names":["ToolBar","tasks","setTasks","inputRef","useRef","getUserId","userId","current","value","alert","className","type","placeholder","ref","onClick","localStorage","setItem","JSON","stringify","userTasks","parse","getItem","filter","task","checked","taskId","NewTaskHandler","content","taskElem","id","CategoryRadio","category","setCategory","name","onChange","e","target","TaskElement","taskRef","contentRef","editContentRef","editRootRef","useState","isChecked","setIsChecked","isEditing","setIsEditing","switchEditMode","classList","toggle","focus","innerText","elem","MainContainer","getVisibleTasks","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af9b9ae8.chunk.js","sourcesContent":["import { useRef } from 'react';\r\nimport './ToolBar.css';\r\n\r\nfunction ToolBar({ tasks, setTasks }) {\r\n  const inputRef = useRef(null);\r\n\r\n  function onClearBtnClicked() {\r\n    setTasks(tasks.filter(task => !task.checked));\r\n  }\r\n\r\n  function onSaveBtnClicked() {\r\n    const userId = getUserId();\r\n    if (!userId) return;\r\n    localStorage.setItem(userId, JSON.stringify(tasks));\r\n  }\r\n\r\n  function onLoadBtnClicked() {\r\n    const userId = getUserId();\r\n    if (!userId) return;\r\n    const userTasks = JSON.parse(localStorage.getItem(userId));\r\n    if (!userTasks) {\r\n      alert('User tasks not found :3');\r\n      return;\r\n    }\r\n    setTasks(userTasks);\r\n  }\r\n\r\n  function getUserId() {\r\n    const userId = inputRef.current.value;\r\n    if (!userId) {\r\n      alert('Please input your user ID :3');\r\n      return '';\r\n    }\r\n    return userId;\r\n  }\r\n\r\n  return (\r\n    <div className=\"tool-bar\">\r\n      <span className=\"tool-id-icon\">🗿</span>\r\n      <input className=\"tool-id common-concave\" type=\"text\" placeholder=\"User ID\" ref={inputRef}></input>\r\n      <button className=\"tool-btn common-btn\" onClick={onSaveBtnClicked}>Save 💾</button>\r\n      <button className=\"tool-btn common-btn\" onClick={onLoadBtnClicked}>Load 📂</button>\r\n      <button className=\"tool-btn common-btn\" onClick={onClearBtnClicked}>Clear Done 🗑️</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToolBar;\r\n","import { useRef } from 'react';\r\nimport './NewTaskHandler.css';\r\n\r\nlet taskId = 0;\r\n\r\nfunction NewTaskHandler({ tasks, setTasks }) {\r\n  const inputRef = useRef(null);\r\n\r\n  function onNewTaskBtnClicked() {\r\n    const content = inputRef.current.value;\r\n    if (!content) {\r\n      alert('Please write a title for the new task :3');\r\n      return;\r\n    }\r\n    inputRef.current.value = '';\r\n    const taskElem = {\r\n      id: taskId,\r\n      content,\r\n      checked: false,\r\n    }\r\n    setTasks([...tasks, taskElem]);\r\n    taskId++;\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-task-handler\">\r\n      <span className=\"new-task-icon\">✏️</span>\r\n      <input\r\n        className=\"new-task-input common-concave\"\r\n        type=\"text\"\r\n        ref={inputRef}\r\n        placeholder=\"Write a title for the new task\"\r\n      />\r\n      <button className=\"new-task-btn common-btn\" onClick={onNewTaskBtnClicked} >📄</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewTaskHandler;\r\n","import './CategoryRadio.css';\r\n\r\nfunction CategoryRadio({ category, setCategory }) {\r\n  return (\r\n    <div className=\"category-radio\">\r\n      <label className=\"input-category-cover\">\r\n        <input\r\n          className=\"input-category category-all\"\r\n          value=\"all\"\r\n          name=\"category\"\r\n          type=\"radio\"\r\n          onChange={e => setCategory(e.target.value)}\r\n          checked={category === 'all'}\r\n        /> All\r\n      </label>\r\n\r\n      <label className=\"input-category-cover\">\r\n        <input\r\n          className=\"input-category\"\r\n          value=\"todo\"\r\n          name=\"category\"\r\n          type=\"radio\"\r\n          onChange={e => setCategory(e.target.value)}\r\n          checked={category === 'todo'}\r\n        /> Todo\r\n      </label>\r\n\r\n      <label className=\"input-category-cover\">\r\n        <input\r\n          className=\"input-category\"\r\n          value=\"done\"\r\n          name=\"category\"\r\n          type=\"radio\"\r\n          onChange={e => setCategory(e.target.value)}\r\n          checked={category === 'done'}\r\n        /> Done\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryRadio;\r\n","import { useState, useRef } from 'react';\r\nimport './TaskElement.css';\r\n\r\nfunction TaskElement({ task, tasks, setTasks }) {\r\n  const taskRef = useRef(null);\r\n  const contentRef = useRef(null);\r\n  const editContentRef = useRef(null);\r\n  const editRootRef = useRef(null);\r\n\r\n  const [isChecked, setIsChecked] = useState(task.checked);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  function onCheckBtnClicked() {\r\n    contentRef.current.classList.toggle('checked-text');\r\n    task.checked = !task.checked;\r\n    setIsChecked(!isChecked);\r\n    setTasks([...tasks]);\r\n  }\r\n\r\n  function onDelBtnClicked() {\r\n    setTasks(tasks.filter(elem => elem.id !== task.id));\r\n  }\r\n\r\n  function onEditStart() {\r\n    if (isEditing) return;\r\n    switchEditMode();\r\n    editContentRef.current.value = task.content;\r\n    editContentRef.current.focus();\r\n    setIsEditing(true);\r\n  }\r\n\r\n  function onEditFinish() {\r\n    if (!isEditing) return;\r\n    switchEditMode();\r\n    task.content = editContentRef.current.value;\r\n    contentRef.current.innerText = task.content;\r\n    setIsEditing(false);\r\n  }\r\n\r\n  function switchEditMode() {\r\n    contentRef.current.classList.toggle('hidden');\r\n    editRootRef.current.classList.toggle('hidden');\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-element\" ref={taskRef}>\r\n      <div className=\"common-concave\"></div>\r\n      <div className=\"task-content\">\r\n        <div className=\"task-sign\">{task.checked ? '🏁' : '🚩'}</div>\r\n        <div \r\n          className={task.checked ? \"task-text checked-text\" : \"task-text\"}\r\n          ref={contentRef} \r\n          onClick={onEditStart}\r\n        >{task.content}</div>\r\n        <div className=\"edit-root hidden\" ref={editRootRef}>\r\n          <input className=\"edit-text common-concave\" type=\"text\" ref={editContentRef} />\r\n          <div className=\"edit-blocker\" onClick={onEditFinish}></div>\r\n        </div>\r\n        <button className=\"task-btn common-btn\" onClick={onCheckBtnClicked}>{task.checked ? '↩️' : '✔️'}</button>\r\n        <button className=\"task-btn common-btn\" onClick={onDelBtnClicked}>❌</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskElement;\r\n","import { useState, useRef } from 'react';\r\nimport './MainContainer.css';\r\nimport ToolBar from './ToolBar';\r\nimport NewTaskHandler from './NewTaskHandler';\r\nimport CategoryRadio from './CategoryRadio';\r\nimport TaskElement from './TaskElement';\r\n\r\nfunction MainContainer() {\r\n  const [category, setCategory] = useState('all');\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  function getVisibleTasks() {\r\n    switch (category) {\r\n      case 'todo':\r\n        return tasks.filter(task => !task.checked);\r\n      case 'done':\r\n        return tasks.filter(task => task.checked);\r\n      default:\r\n        return tasks;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-container\">\r\n      <div className=\"list-window common-convex\">\r\n        <div className=\"window-title\">📝Todo List</div>\r\n        <ToolBar tasks={tasks} setTasks={setTasks} />\r\n        <NewTaskHandler tasks={tasks} setTasks={setTasks} />\r\n        <CategoryRadio category={category} setCategory={setCategory} />\r\n        <div className=\"tasks-container\">{\r\n          getVisibleTasks().map(task =>\r\n            <TaskElement\r\n              key={task.id}\r\n              {...{task}}\r\n              {...{tasks}}\r\n              {...{setTasks}}\r\n            />\r\n          )\r\n        }</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './index.css';\nimport MainContainer from './Components/MainContainer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}